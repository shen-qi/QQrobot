#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Jan 25 14:54:58 2021

@author: yuan
"""
import keyword 

x = 3
print(type(x))
x = 'Hello World'
# =============================================================================
# 1.查看变量类型
# =============================================================================
print(type(x))
x = [1, 2, 3]
print(type(x))
# =============================================================================
# 2.检查实例
# =============================================================================
isinstance(3, int)
isinstance('Hello World', str)

# =============================================================================
# 强类型编程语言，根据赋值或运算自动推断变量类型，动态类型语言，变量的类型随时变化
# =============================================================================

x = 3 
print(id(x))
y = 3
print(id(y))
z = 1
print(id(z))
m = [1, 1, 1, 1]
print(id(m[0]))
# =============================================================================
# 3.python是基于值的内存管理方式，也是说，python相同的值只存储一次，并且把变量的地址指向该地址
# =============================================================================

# =============================================================================
# 4.python的自动内存管理功能：
#     python会自动跟踪所有的值，对于没有任何变量指向的值，会自动清空
#     使用del命令删除不需要的值，或显式关闭不需要的访问资源是一个好的习惯
# =============================================================================
    
# =============================================================================
# 5. python变量名要求：
#     a.以字母或下划线开头，但python种开头是下划线的在Python中有特殊含义，一般不使用
#     b.变量名不能有出下划线的特殊符号
#     c.不能使用关键字
#     d.不建议使用系统内置的模块名、类型名、函数名以及以导入的模块名及成员名，会改变其类型和含义
#     e.变量名对大小写敏感。
# =============================================================================

print(dir(__builtins__))
print(keyword.kwlist)


# =============================================================================
# 6. python数字：
#     数字不可变，可以表示任意大小的数字
#     ** 次方 a = 2 a**3结果 8    
#    整数类型：
#        十进制
#        十六进制  0x
#        八进制   0o
#        二进制   0b
#    浮点数：
#     支持复数，复数的乘除
#         
# =============================================================================
a = 3+4j
print(a)
print(type(a))
print(a.real)  #复数的实部
print(a.imag)  #复数的虚部
print(a.conjugate())  #复数的共轭复数


# =============================================================================
# 7. python字符串
#     单引号，双引号，三引号括起来都是字符串，可以相互嵌套，表示复杂字符串
#     空串 '' "" 
#     字符串属于不可变的序列
#     三引号 字符串可以换行，也可以表示注释
# =============================================================================

print([1, 2, 3] + [3, 4, 5, 6]) #连接两个列表
print((1, 2, 3) + (5,))        #连接两个元组
#print((1, 2, 3) + (5)) 报错   
print('a' + 'b')              #连接两个字符串
print(True + 2)             #python 会将True理解为1 False为0
print(2.0 * 3)
print('a' * 3)               #字符串重复
print([1, 2, 3] * 3)      #列表重复
print((1, 2, 3) * 3)      #元组重复
print(3/5)        #真除
print(3//5)       #整除
print(-12//10)    #负数也可以
print(2.3/3)      #小数也可以
print(2.3%3)      #python可以将小数取模运算，但是可能会存在精度误差
i = 3
print(++i) # 正正得正 即：+(+3) 不存在 i++
print(-i) # 负 不存在 i++
print(--i) # 负负得正 不存在 i++
print('a' in 'b', 'a') #逗号是分隔符，分成两个运算


# =============================================================================
# 8.代码规范
#      1.缩进
# =============================================================================
while 1 : 
    x = input('请输入一个三位整数：')
    if '.' in x :
        print('这不是一个整数')
        x = input('请重新输入一个三位整数：')
    elif int(x) < 100 or int(x) > 999 :
        print('这不是一个三位数')
        x = input('请重新输入一个三位整数：')
    else :
        x = int(x)
        m = x//100  #从余数角度：m = x
        n = x//10%10
        z = x%10
        print(m, n, z)